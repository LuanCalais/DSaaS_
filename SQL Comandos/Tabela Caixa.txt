CREATE SEQUENCE seq_caixa
    START WITH 3
    INCREMENT BY 5;

CREATE TABLE caixa(
    id INTEGER DEFAULT NEXTVAL('seq_caixa'),
    tipo VARCHAR(11) NOT NULL,
    descricao VARCHAR(50) NOT NULL,
    quantidade INTEGER NOT NULL,
    cd_usuario INTEGER NOT NULL,
    data_confirm DATE,
    total NUMERIC,	
    CONSTRAINT pk_idCaixa PRIMARY KEY(id),
    CONSTRAINT fk_usuario FOREIGN KEY(cd_usuario) REFERENCES usuario(id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE SEQUENCE seq_estoque;

CREATE TABLE estoque(
    id INTEGER DEFAULT NEXTVAL('seq_estoque'),
    referencia CHAR NOT NULL,
    rua INTEGER NOT NULL UNIQUE,
    data_entrada TIMESTAMP,
    status VARCHAR NOT NULL CHECK (status = 'Vazio' OR status = 'Ocupado'),
    cd_caixa INTEGER,
    CONSTRAINT pk_idEstoque PRIMARY KEY(id),
    CONSTRAINT fk_caixa FOREIGN KEY (cd_caixa) REFERENCES caixa(id)
);

CREATE SEQUENCE seq_solicitacoes;

CREATE TABLE solicitacoes(
    id INTEGER DEFAULT NEXTVAL('seq_solicitacoes'),
    data_solicitacao DATE,
    cd_usuario INTEGER NOT NULL,
    cd_caixa INTEGER NOT NULL,
    status VARCHAR NOT NULL CHECK (status = 'Pendente' OR status = 'Confirmado'),
    CONSTRAINT pk_solicitacoes PRIMARY KEY(id),
    CONSTRAINT fk_usuario FOREIGN KEY(cd_usuario) REFERENCES usuario(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_caixa FOREIGN KEY(cd_caixa) REFERENCES caixa(id)
    ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE VIEW view_solicitacoes AS 
SELECT solicita.id, usu.id AS cd_usuario, usu.email, caixa.tipo, caixa.descricao, caixa.quantidade, solicita.status
FROM usuario AS usu, caixa AS caixa, solicitacoes AS solicita
WHERE usu.id = solicita.cd_usuario AND caixa.id = solicita.cd_caixa; 
